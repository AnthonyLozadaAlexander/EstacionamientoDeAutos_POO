/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Aplicacion;

import javax.swing.JOptionPane;

/**
 *
 * @author USUARIO
 */
public class MainWindow extends javax.swing.JFrame {

    /**
     * Creates new form MainWindow
     */
    public MainWindow() {
        initComponents();
        setLocationRelativeTo(null);
        setResizable(false);
        setTitle("Form_Estacionaria");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        FondoJP = new javax.swing.JPanel();
        TituloJP = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        CampoJP = new javax.swing.JPanel();
        PanelTipos = new javax.swing.JPanel();
        txtPrecio = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtMarca = new javax.swing.JTextField();
        cboTipoAuto = new javax.swing.JComboBox<>();
        cboTipoPago = new javax.swing.JComboBox<>();
        autoJP = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        txtPuertas = new javax.swing.JTextField();
        motoPanel = new javax.swing.JPanel();
        txtCilindraje = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        btnCalcular = new javax.swing.JButton();
        btnSalir = new javax.swing.JButton();
        btnLimpiar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtHistorial = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        FondoJP.setBackground(new java.awt.Color(255, 255, 255));
        FondoJP.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        TituloJP.setBackground(new java.awt.Color(255, 255, 204));
        TituloJP.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("CaskaydiaMono NF SemiBold", 0, 36)); // NOI18N
        jLabel1.setText("Estacionaria De Autos");
        TituloJP.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 50, 450, 35));

        FondoJP.add(TituloJP, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 540, 130));

        CampoJP.setBackground(new java.awt.Color(242, 255, 243));
        CampoJP.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        PanelTipos.setBackground(new java.awt.Color(232, 232, 255));
        PanelTipos.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        PanelTipos.add(txtPrecio, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 90, 130, -1));

        jLabel2.setFont(new java.awt.Font("CaskaydiaMono NF SemiBold", 0, 18)); // NOI18N
        jLabel2.setText("Precio:");
        PanelTipos.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 90, -1, -1));

        jLabel3.setFont(new java.awt.Font("CaskaydiaMono NF SemiBold", 0, 18)); // NOI18N
        jLabel3.setText("Marca:");
        PanelTipos.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 60, -1, -1));
        PanelTipos.add(txtMarca, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 60, 130, -1));

        cboTipoAuto.setFont(new java.awt.Font("CaskaydiaMono NF SemiBold", 0, 14)); // NOI18N
        cboTipoAuto.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccionar", "Auto", "Moto" }));
        cboTipoAuto.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboTipoAutoItemStateChanged(evt);
            }
        });
        cboTipoAuto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cboTipoAutoMouseClicked(evt);
            }
        });
        cboTipoAuto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboTipoAutoActionPerformed(evt);
            }
        });
        cboTipoAuto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cboTipoAutoKeyPressed(evt);
            }
        });
        PanelTipos.add(cboTipoAuto, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 60, -1, -1));

        cboTipoPago.setFont(new java.awt.Font("CaskaydiaMono NF SemiBold", 0, 14)); // NOI18N
        cboTipoPago.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccionar", "Credito", "Contado" }));
        PanelTipos.add(cboTipoPago, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 90, -1, -1));

        CampoJP.add(PanelTipos, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 540, 180));

        autoJP.setBackground(new java.awt.Color(255, 255, 229));
        autoJP.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel4.setFont(new java.awt.Font("CaskaydiaMono NF SemiBold", 0, 18)); // NOI18N
        jLabel4.setText("Puertas");
        autoJP.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 20, -1, -1));
        autoJP.add(txtPuertas, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 50, 120, -1));

        CampoJP.add(autoJP, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 180, 540, 110));

        motoPanel.setBackground(new java.awt.Color(239, 239, 255));
        motoPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        motoPanel.add(txtCilindraje, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 60, 120, -1));

        jLabel5.setFont(new java.awt.Font("CaskaydiaMono NF SemiBold", 0, 18)); // NOI18N
        jLabel5.setText("Cilindraje");
        motoPanel.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 30, -1, -1));

        CampoJP.add(motoPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 290, 540, 110));

        btnCalcular.setFont(new java.awt.Font("CaskaydiaMono NF SemiBold", 0, 14)); // NOI18N
        btnCalcular.setText("Calcular");
        btnCalcular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCalcularActionPerformed(evt);
            }
        });
        CampoJP.add(btnCalcular, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 450, 100, 30));

        btnSalir.setFont(new java.awt.Font("CaskaydiaMono NF SemiBold", 0, 14)); // NOI18N
        btnSalir.setText("Salir");
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });
        CampoJP.add(btnSalir, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 450, 90, 30));

        btnLimpiar.setFont(new java.awt.Font("CaskaydiaMono NF SemiBold", 0, 14)); // NOI18N
        btnLimpiar.setText("Limpiar");
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });
        CampoJP.add(btnLimpiar, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 450, 90, 30));

        FondoJP.add(CampoJP, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 130, 540, 530));

        txtHistorial.setEditable(false);
        txtHistorial.setColumns(20);
        txtHistorial.setLineWrap(true);
        txtHistorial.setRows(5);
        txtHistorial.setWrapStyleWord(true);
        txtHistorial.setFocusable(false);
        jScrollPane1.setViewportView(txtHistorial);

        FondoJP.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 0, 350, 660));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(FondoJP, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(FondoJP, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Limpiar() {

        int opcion = JOptionPane.showConfirmDialog(this, "Desea Limpiar El Formulario?", "Aviso", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);

        if (opcion == JOptionPane.YES_OPTION) {
            int confirmar = JOptionPane.showConfirmDialog(this, "Aviso: Se Borraran El Historial Del Formulario", "Aviso", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
            if (confirmar == JOptionPane.YES_OPTION) {
                txtCilindraje.setText("");
                txtMarca.setText("");
                txtPuertas.setText("");
                txtPrecio.setText("");
                txtHistorial.setText("");
            }

            return;
        }

    }

    private void btnCalcularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCalcularActionPerformed

        String marca = "";
        double precio = 0.0;
        int puertas = 0;
        double cilindraje = 0.0;
        String regexNumero = "^-?\\d+(\\.\\d+)?$";

        // se almacena la seleccion del combobox
        String tipoAuto = (String) cboTipoAuto.getSelectedItem();
        String tipoPago = (String) cboTipoPago.getSelectedItem();

        // Validaciones
        if (txtMarca.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Error: El Campo De La Marca No Puede Estar Vacio", "ERROR", JOptionPane.ERROR_MESSAGE);
            return;
        }

        if (!(txtPrecio.getText().matches(regexNumero))) {
            JOptionPane.showMessageDialog(this, "Error: El Precio Debe Contener Numeros Enteros o Decimales", "ERROR", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Condicionales Para TipoAuto y TipoPago Seleccionado
        if (("Auto").equals(tipoAuto) && ("Credito").equals(tipoPago)) {
            
            // Validaciones
            if (txtPuertas.getText().trim().isEmpty()) {
                JOptionPane.showMessageDialog(this, "ERROR: El Campo No Puede Estar Vacio", "ERROR", JOptionPane.WARNING_MESSAGE);
                return;
            }

            marca = txtMarca.getText();
            precio = Double.parseDouble(txtPrecio.getText());
            puertas = Integer.parseInt(txtPuertas.getText());

            if (precio < 0) {
                JOptionPane.showMessageDialog(this, "ERROR: Precio Ingresado Invalido", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
            
            if(puertas < 0){
                JOptionPane.showMessageDialog(this, "ERROR: Puertas Ingresado Invalido: " + puertas,"Error",JOptionPane.ERROR_MESSAGE);
                return;
            }

            // Crear objeto
            Auto Auto1 = new Auto();

            // set = Establecer o Asignar
            // get = Obtener o Llamar
            Auto1.setMarca(marca);
            Auto1.setPrecio(precio);
            Auto1.setPuertas(puertas);
            Auto1.Subtotal();
            Auto1.calcularIVA();
            Auto1.calcularTotal(tipoPago);

            txtHistorial.append(Auto1.mostrarInfo(tipoPago));
            
            
         // Condicionales Para TipoAuto y TipoPago Seleccionado
        } else if (("Auto").equals(tipoAuto) && ("Contado").equals(tipoPago)) {

            if (txtPuertas.getText().trim().isEmpty()) {
                JOptionPane.showMessageDialog(this, "ERROR: El Campo No Puede Estar Vacio", "ERROR", JOptionPane.WARNING_MESSAGE);
                return;
            }

            marca = txtMarca.getText();
            precio = Double.parseDouble(txtPrecio.getText());
            puertas = Integer.parseInt(txtPuertas.getText());

            if (precio < 0) {
                JOptionPane.showMessageDialog(this, "ERROR: Precio Ingresado Invalido", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
            
            if(puertas < 0){
                JOptionPane.showMessageDialog(this, "ERROR: Puertas Ingresado Invalido: " + puertas,"Error",JOptionPane.ERROR_MESSAGE);
                return;
            }

            // Crear objeto
            Auto Auto1 = new Auto();

            // set = Establecer o Asignar
            // get = Obtener o Llamar
            Auto1.setMarca(marca);
            Auto1.setPrecio(precio);
            Auto1.setPuertas(puertas);
            Auto1.Subtotal();
            Auto1.calcularIVA();
            Auto1.calcularTotal(tipoPago);

            txtHistorial.append(Auto1.mostrarInfo(tipoPago));

        }

         // Condicionales Para TipoAuto y TipoPago Seleccionado
        if (("Moto").equals(tipoAuto) && ("Credito").equals(tipoPago)) {

            if (txtCilindraje.getText().trim().isEmpty()) {
                JOptionPane.showMessageDialog(this, "ERROR: El Campo No Puede Estar Vacio", "ERROR", JOptionPane.WARNING_MESSAGE);
                return;
            }

            marca = txtMarca.getText();
            precio = Double.parseDouble(txtPrecio.getText());
            cilindraje = Double.parseDouble(txtCilindraje.getText());

            if (precio < 0) {
                JOptionPane.showMessageDialog(this, "ERROR: Precio Ingresado Invalido", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            if (cilindraje < 0) {
                JOptionPane.showMessageDialog(this, "ERROR: Cilindraje Ingresado Invalido: " + cilindraje, "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            // Crear objeto
            Moto moto1 = new Moto();

            // set = Establecer o Asignar
            // get = Obtener o Llamar
            moto1.setMarca(marca);
            moto1.setPrecio(precio);
            moto1.setCilindraje(cilindraje);
            moto1.SubTotal();
            moto1.calcularIVA();
            moto1.calcularTotal(tipoPago);

            txtHistorial.append(moto1.mostrarInfo(tipoPago));

            
         // Condicionales Para TipoAuto y TipoPago Seleccionado
        } else if (("Moto").equals(tipoAuto) && ("Contado").equals(tipoPago)) {

            if (txtCilindraje.getText().trim().isEmpty()) {
                JOptionPane.showMessageDialog(this, "ERROR: El Campo No Puede Estar Vacio", "ERROR", JOptionPane.WARNING_MESSAGE);
                return;
            }

            marca = txtMarca.getText();
            precio = Double.parseDouble(txtPrecio.getText());
            cilindraje = Double.parseDouble(txtCilindraje.getText());

            if (precio < 0) {
                JOptionPane.showMessageDialog(this, "ERROR: Precio Ingresado Invalido: " + precio, "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            if (cilindraje < 0) {
                JOptionPane.showMessageDialog(this, "ERROR: Cilindraje Ingresado Invalido: " + cilindraje, "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            // Crear objeto
            Moto moto1 = new Moto();

            // set = Establecer o Asignar
            // get = Obtener o Llamar
            moto1.setMarca(marca);
            moto1.setPrecio(precio);
            moto1.setCilindraje(cilindraje);
            moto1.SubTotal();
            moto1.calcularIVA();
            moto1.calcularTotal(tipoPago);

            txtHistorial.append(moto1.mostrarInfo(tipoPago));
        }


    }//GEN-LAST:event_btnCalcularActionPerformed

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        int opcion = JOptionPane.showConfirmDialog(this, "Desea Salir Del Programa?", "Salida", JOptionPane.YES_NO_OPTION);
        if (opcion == JOptionPane.YES_OPTION) {
            System.exit(0);
        }
    }//GEN-LAST:event_btnSalirActionPerformed

    private void cboTipoAutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboTipoAutoActionPerformed
        int indexTipoAuto = cboTipoAuto.getSelectedIndex();

        if (indexTipoAuto == 1) {
            txtPuertas.setEnabled(true); // activa txt puertas
            txtPuertas.setEditable(true); // habilita la edicion
            txtCilindraje.setEnabled(false); // desactiva txtCilindraje
            txtCilindraje.setEditable(false); // desactiva txtCilindraje
            txtCilindraje.setText("");
        } else if (indexTipoAuto == 2) {
            txtCilindraje.setEditable(true); // habilita la edicion
            txtCilindraje.setEnabled(true); // activa txtCilindraje
            txtPuertas.setEnabled(false); // desactiva txtPuertas
            txtPuertas.setEditable(false); // desactiva txtPuertas
            txtPuertas.setText("");
        }


    }//GEN-LAST:event_cboTipoAutoActionPerformed

    private void cboTipoAutoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cboTipoAutoMouseClicked

    }//GEN-LAST:event_cboTipoAutoMouseClicked

    private void cboTipoAutoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cboTipoAutoKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_cboTipoAutoKeyPressed

    private void cboTipoAutoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboTipoAutoItemStateChanged
        /*
        if(evt.getStateChange() == java.awt.event.ItemEvent.SELECTED){
             String seleccionComboBox = (String) cboTipoAuto.getSelectedItem();
        
            if("Auto".equals(seleccionComboBox)){
            
                txtPuertas.setEnabled(true); // activa txt puertas
                txtCilindraje.setEnabled(false); // desactiva txtCilindraje
                txtCilindraje.setEditable(false); // desactiva txtCilindraje
                txtCilindraje.setText("");
                
            }
            else if("Moto".equals(seleccionComboBox)){
                
                txtCilindraje.setEnabled(true); // activa txtCilindraje
                txtPuertas.setEnabled(false); // desactiva txtPuertas
                txtPuertas.setEditable(false); // desactiva txtPuertas
                txtPuertas.setText("");
            }
        }
         */
    }//GEN-LAST:event_cboTipoAutoItemStateChanged

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
        Limpiar();
    }//GEN-LAST:event_btnLimpiarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainWindow().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel CampoJP;
    private javax.swing.JPanel FondoJP;
    private javax.swing.JPanel PanelTipos;
    private javax.swing.JPanel TituloJP;
    private javax.swing.JPanel autoJP;
    private javax.swing.JButton btnCalcular;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JButton btnSalir;
    private javax.swing.JComboBox<String> cboTipoAuto;
    private javax.swing.JComboBox<String> cboTipoPago;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel motoPanel;
    private javax.swing.JTextField txtCilindraje;
    private javax.swing.JTextArea txtHistorial;
    private javax.swing.JTextField txtMarca;
    private javax.swing.JTextField txtPrecio;
    private javax.swing.JTextField txtPuertas;
    // End of variables declaration//GEN-END:variables
}
